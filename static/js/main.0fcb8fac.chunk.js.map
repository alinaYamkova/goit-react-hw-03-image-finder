{"version":3,"sources":["API/API.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","index.js"],"names":["getFetch","searchQuery","currentPage","url","fetch","then","res","json","response","hits","Searchbar","state","showModal","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","className","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","selectedImg","largeImageURL","onClick","webformatURL","tags","id","src","alt","ImageGallery","getElem","map","Button","fetchImg","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleBackdropClick","currentTurget","window","addEventListener","removeEventListener","createPortal","children","App","isLoading","resultLength","error","onChangeQuery","api","result","length","catch","console","log","prevState","scrollTo","finally","top","documentElement","scrollHeight","behavior","toggleModal","elem","prevProps","shouldRenderLoadMoreBtn","onFetchImg","width","height","color","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0fcb8fac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst baseUrl = \"https://pixabay.com/api/\";\r\nconst apiKey = \"20840162-f62ff7402b91de28f502cc31c\";\r\n\r\nfunction getFetch(searchQuery, currentPage) {\r\n  const url = `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=12&key=${apiKey}`;\r\n  return fetch(url)\r\n  .then((res) => res.json())\r\n  .then((response) => response.hits);\r\n  \r\n}\r\n\r\n////////////////////////////////////////////////\r\n// import axios from \"axios\";\r\n// axios.defaults.baseURL = \"https://pixabay.com/api/\";\r\n// let key = \"20791444-9e10ec7121cc0b87619d148c0\";\r\n// // const URL = `${this.baseUrl}?q=${query}&page=${this.page}&image_type=photo&orientation=horizontal&per_page=${this.per_page}`;\r\n// const getFetch = ({ query = \"\", currentPage = 1 }) => {\r\n//   return axios\r\n//     .get(\r\n//       `?q=${query}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=12${key}`\r\n//     )\r\n//     .then((response) => response.hits);\r\n// };\r\n\r\n\r\nexport default { getFetch };","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import \"../Styles/Styles.module.css\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    showModal: false,\r\n    query: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    // const { handleChange, handleSubmit } = this;\r\n    const { query } = this.state;\r\n\r\n    return (\r\n      <>\r\n       <header className=\"Searchbar\">\r\n        <form  onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"SearchForm-button\"\r\n          >\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n          />\r\n        </form>\r\n      </header>\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    selectedImg: this.props.largeImageURL,\r\n  };\r\n\r\n  handleChange = () => {\r\n    this.props.onClick(this.state.largeImageURL);\r\n  };\r\n\r\n  render() {\r\n    const {webformatURL, tags, id} = this.props;\r\n\r\n    return (\r\n      <li onClick={this.handleChange}>\r\n        <img\r\n          src={webformatURL}\r\n          alt={tags}\r\n          key={id}\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ hits, getElem }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {hits.map(({id, tags, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem \r\n          key={id}\r\n          alt={tags}\r\n          src={webformatURL}\r\n          selectedImg={largeImageURL}\r\n          getElem={getElem}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import s from '.././Styles/Styles.module.css';\r\n\r\nconst Button = ({ fetchImg }) => (\r\n    <button \r\n      type=\"button\" \r\n      className=\"Button\" \r\n      onClick={fetchImg}>\r\n      Load more \r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  fetchImg: PropTypes.func.isRequired,\r\n};","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeydown);\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeydown);\r\n  }\r\n  //закриття по Escape\r\n  handleKeydown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  //  //закриття по BackdropClick\r\n  handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTurget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\nimport api from \"./API/API\";\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Button from \"./Components/Button/Button\";\nimport Modal from \"./Components/Modal/Modal\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./App.css\";\n\n// const fetch = api.getFetch().then((fetch) => console.log(fetch))\n\nclass App extends Component {\n  state = {\n    hits: [],\n    searchQuery: \"\",\n    currentPage: 1,\n    isLoading: false,\n    showModal: false,\n    resultLength: null,\n    selectedImg: '',\n    error: null,\n  };\n\n  componentDidUpdate(prevState, prevProps) {\n    const { searchQuery } = this.state;\n    if (prevState.searchQuery !== searchQuery && searchQuery !== '') {\n      this.fetchImg();\n    };\n  }\n  \n  onChangeQuery = (query) => {\n    const { searchQuery, currentPage } = this.state;\n    if(searchQuery === query) {\n      return;\n    }\n    this.setState ({searchQuery: query, currentPage: 1, hits: [] });\n    this.setState({ isLoading: true });\n    api.getFetch(query, currentPage).then((result) => {\n      this.setState({ \n        hits: [...result], \n        resultLength: result.length, \n        isLoading: false,\n      })\n      .catch((error) => { console.log(\"ERROR\", error)});\n    });  \n  }\n\n  fetchImg = () => {\n    const { searchQuery, currentPage } = this.state;\n    this.setState({ isLoading: true});\n\n    api.getFetch({searchQuery, currentPage})\n    .then(({result}) => {\n      this.setState((prevState) => ({\n        hits: [...prevState.hits, result],\n        resultLength: result.length, \n        currentPage: prevState.currentPage + 1,\n      }));\n      this.scrollTo();\n    })\n    .catch(error => this.setState({ error }))\n    .finally(() => this.setState({ isLoading: false }));\n    // console.log(this.state.hits);\n    // console.log(this.state.result)\n  };\n  \n  scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  getElem = (elem) => {\n    this.setState({ selectedImg: elem });\n    this.toggleModal();\n  };\n\n  render() {\n    const { showModal, isLoading, hits, resultLength, selectedImg } = this.state;\n    const { toggleModal, getElem, fetchImg, onChangeQuery } = this;\n    const shouldRenderLoadMoreBtn = resultLength === 12 && !isLoading;\n    return (\n      <>\n        <Searchbar onSubmit={onChangeQuery} />\n        <ImageGallery hits={hits} getElem={getElem} />\n\n        {shouldRenderLoadMoreBtn && \n          <Button onFetchImg={fetchImg} />\n        } \n        \n        {showModal && (\n          <Modal onClose={toggleModal}>\n            <img \n              src={selectedImg} \n              width=\"600\" \n              height=\"400\" \n            />\n          </Modal>\n        )}\n\n        {isLoading && \n          <Loader \n            type=\"BallTriangle\" \n            color=\"#00BFFF\" \n            height={80}\n            width={80} \n            timeout={2500} \n          />}\n      </>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}